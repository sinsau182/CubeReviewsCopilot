"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "(pages-dir-browser)/./src/store/slices/analyticsSlice.js":
/*!********************************************!*\
  !*** ./src/store/slices/analyticsSlice.js ***!
  \********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearError: () => (/* binding */ clearError),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fetchAnalytics: () => (/* binding */ fetchAnalytics),\n/* harmony export */   resetAnalytics: () => (/* binding */ resetAnalytics)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"(pages-dir-browser)/./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n\n// Async thunk for fetching analytics data\nconst fetchAnalytics = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('analytics/fetchAnalytics', async (_, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await fetch('http://13.53.214.127:8000/analytics', {\n            method: 'GET',\n            headers: {\n                'x-api-key': 'your-api-key'\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        return rejectWithValue(error.message);\n    }\n});\nconst analyticsSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: 'analytics',\n    initialState: {\n        // Main analytics data\n        totalReviews: 0,\n        averageRating: 0,\n        positiveRate: 0,\n        negativeCount: 0,\n        // Distribution data\n        sentimentDistribution: {},\n        topicDistribution: {},\n        locationBreakdown: {},\n        // State management\n        isLoading: false,\n        error: null,\n        lastUpdated: null\n    },\n    reducers: {\n        clearError: (state)=>{\n            state.error = null;\n        },\n        resetAnalytics: (state)=>{\n            state.totalReviews = 0;\n            state.averageRating = 0;\n            state.positiveRate = 0;\n            state.negativeCount = 0;\n            state.sentimentDistribution = {};\n            state.topicDistribution = {};\n            state.locationBreakdown = {};\n            state.error = null;\n            state.lastUpdated = null;\n        }\n    },\n    extraReducers: (builder)=>{\n        builder.addCase(fetchAnalytics.pending, (state)=>{\n            state.isLoading = true;\n            state.error = null;\n        }).addCase(fetchAnalytics.fulfilled, (state, action)=>{\n            state.isLoading = false;\n            state.totalReviews = action.payload.total_reviews;\n            state.averageRating = action.payload.average_rating;\n            state.positiveRate = action.payload.positive_rate;\n            state.negativeCount = action.payload.negative_count;\n            state.sentimentDistribution = action.payload.sentiment_distribution;\n            state.topicDistribution = action.payload.topic_distribution;\n            state.locationBreakdown = action.payload.location_breakdown;\n            state.lastUpdated = new Date().toISOString();\n            state.error = null;\n        }).addCase(fetchAnalytics.rejected, (state, action)=>{\n            state.isLoading = false;\n            state.error = action.payload;\n        });\n    }\n});\nconst { clearError, resetAnalytics } = analyticsSlice.actions;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (analyticsSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9zdG9yZS9zbGljZXMvYW5hbHl0aWNzU2xpY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBaUU7QUFFakUsMENBQTBDO0FBQ25DLE1BQU1FLGlCQUFpQkQsa0VBQWdCQSxDQUM1Qyw0QkFDQSxPQUFPRTtRQUFHLEVBQUVDLGVBQWUsRUFBRTtJQUMzQixJQUFJO1FBQ0YsTUFBTUMsV0FBVyxNQUFNQyxNQUFNLHVDQUF1QztZQUNsRUMsUUFBUTtZQUNSQyxTQUFTO2dCQUNQLGFBQWE7WUFDZjtRQUNGO1FBRUEsSUFBSSxDQUFDSCxTQUFTSSxFQUFFLEVBQUU7WUFDaEIsTUFBTSxJQUFJQyxNQUFNLHVCQUF1QyxPQUFoQkwsU0FBU00sTUFBTTtRQUN4RDtRQUVBLE1BQU1DLFNBQVMsTUFBTVAsU0FBU1EsSUFBSTtRQUNsQyxPQUFPRDtJQUNULEVBQUUsT0FBT0UsT0FBTztRQUNkLE9BQU9WLGdCQUFnQlUsTUFBTUMsT0FBTztJQUN0QztBQUNGLEdBQ0E7QUFFRixNQUFNQyxpQkFBaUJoQiw2REFBV0EsQ0FBQztJQUNqQ2lCLE1BQU07SUFDTkMsY0FBYztRQUNaLHNCQUFzQjtRQUN0QkMsY0FBYztRQUNkQyxlQUFlO1FBQ2ZDLGNBQWM7UUFDZEMsZUFBZTtRQUVmLG9CQUFvQjtRQUNwQkMsdUJBQXVCLENBQUM7UUFDeEJDLG1CQUFtQixDQUFDO1FBQ3BCQyxtQkFBbUIsQ0FBQztRQUVwQixtQkFBbUI7UUFDbkJDLFdBQVc7UUFDWFosT0FBTztRQUNQYSxhQUFhO0lBQ2Y7SUFDQUMsVUFBVTtRQUNSQyxZQUFZLENBQUNDO1lBQ1hBLE1BQU1oQixLQUFLLEdBQUc7UUFDaEI7UUFDQWlCLGdCQUFnQixDQUFDRDtZQUNmQSxNQUFNWCxZQUFZLEdBQUc7WUFDckJXLE1BQU1WLGFBQWEsR0FBRztZQUN0QlUsTUFBTVQsWUFBWSxHQUFHO1lBQ3JCUyxNQUFNUixhQUFhLEdBQUc7WUFDdEJRLE1BQU1QLHFCQUFxQixHQUFHLENBQUM7WUFDL0JPLE1BQU1OLGlCQUFpQixHQUFHLENBQUM7WUFDM0JNLE1BQU1MLGlCQUFpQixHQUFHLENBQUM7WUFDM0JLLE1BQU1oQixLQUFLLEdBQUc7WUFDZGdCLE1BQU1ILFdBQVcsR0FBRztRQUN0QjtJQUNGO0lBQ0FLLGVBQWUsQ0FBQ0M7UUFDZEEsUUFDR0MsT0FBTyxDQUFDaEMsZUFBZWlDLE9BQU8sRUFBRSxDQUFDTDtZQUNoQ0EsTUFBTUosU0FBUyxHQUFHO1lBQ2xCSSxNQUFNaEIsS0FBSyxHQUFHO1FBQ2hCLEdBQ0NvQixPQUFPLENBQUNoQyxlQUFla0MsU0FBUyxFQUFFLENBQUNOLE9BQU9PO1lBQ3pDUCxNQUFNSixTQUFTLEdBQUc7WUFDbEJJLE1BQU1YLFlBQVksR0FBR2tCLE9BQU9DLE9BQU8sQ0FBQ0MsYUFBYTtZQUNqRFQsTUFBTVYsYUFBYSxHQUFHaUIsT0FBT0MsT0FBTyxDQUFDRSxjQUFjO1lBQ25EVixNQUFNVCxZQUFZLEdBQUdnQixPQUFPQyxPQUFPLENBQUNHLGFBQWE7WUFDakRYLE1BQU1SLGFBQWEsR0FBR2UsT0FBT0MsT0FBTyxDQUFDSSxjQUFjO1lBQ25EWixNQUFNUCxxQkFBcUIsR0FBR2MsT0FBT0MsT0FBTyxDQUFDSyxzQkFBc0I7WUFDbkViLE1BQU1OLGlCQUFpQixHQUFHYSxPQUFPQyxPQUFPLENBQUNNLGtCQUFrQjtZQUMzRGQsTUFBTUwsaUJBQWlCLEdBQUdZLE9BQU9DLE9BQU8sQ0FBQ08sa0JBQWtCO1lBQzNEZixNQUFNSCxXQUFXLEdBQUcsSUFBSW1CLE9BQU9DLFdBQVc7WUFDMUNqQixNQUFNaEIsS0FBSyxHQUFHO1FBQ2hCLEdBQ0NvQixPQUFPLENBQUNoQyxlQUFlOEMsUUFBUSxFQUFFLENBQUNsQixPQUFPTztZQUN4Q1AsTUFBTUosU0FBUyxHQUFHO1lBQ2xCSSxNQUFNaEIsS0FBSyxHQUFHdUIsT0FBT0MsT0FBTztRQUM5QjtJQUNKO0FBQ0Y7QUFFTyxNQUFNLEVBQUVULFVBQVUsRUFBRUUsY0FBYyxFQUFFLEdBQUdmLGVBQWVpQyxPQUFPLENBQUM7QUFDckUsaUVBQWVqQyxlQUFla0MsT0FBTyxFQUFDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXHNpbnNhXFxEb3dubG9hZHNcXHJldmlld2NvcGlsb3Rmcm9udGVuZFxcc3JjXFxzdG9yZVxcc2xpY2VzXFxhbmFseXRpY3NTbGljZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTbGljZSwgY3JlYXRlQXN5bmNUaHVuayB9IGZyb20gJ0ByZWR1eGpzL3Rvb2xraXQnO1xyXG5cclxuLy8gQXN5bmMgdGh1bmsgZm9yIGZldGNoaW5nIGFuYWx5dGljcyBkYXRhXHJcbmV4cG9ydCBjb25zdCBmZXRjaEFuYWx5dGljcyA9IGNyZWF0ZUFzeW5jVGh1bmsoXHJcbiAgJ2FuYWx5dGljcy9mZXRjaEFuYWx5dGljcycsXHJcbiAgYXN5bmMgKF8sIHsgcmVqZWN0V2l0aFZhbHVlIH0pID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHA6Ly8xMy41My4yMTQuMTI3OjgwMDAvYW5hbHl0aWNzJywge1xyXG4gICAgICAgIG1ldGhvZDogJ0dFVCcsXHJcbiAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgJ3gtYXBpLWtleSc6ICd5b3VyLWFwaS1rZXknLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgSFRUUCBlcnJvciEgc3RhdHVzOiAke3Jlc3BvbnNlLnN0YXR1c31gKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmV0dXJuIHJlamVjdFdpdGhWYWx1ZShlcnJvci5tZXNzYWdlKTtcclxuICAgIH1cclxuICB9XHJcbik7XHJcblxyXG5jb25zdCBhbmFseXRpY3NTbGljZSA9IGNyZWF0ZVNsaWNlKHtcclxuICBuYW1lOiAnYW5hbHl0aWNzJyxcclxuICBpbml0aWFsU3RhdGU6IHtcclxuICAgIC8vIE1haW4gYW5hbHl0aWNzIGRhdGFcclxuICAgIHRvdGFsUmV2aWV3czogMCxcclxuICAgIGF2ZXJhZ2VSYXRpbmc6IDAsXHJcbiAgICBwb3NpdGl2ZVJhdGU6IDAsXHJcbiAgICBuZWdhdGl2ZUNvdW50OiAwLFxyXG4gICAgXHJcbiAgICAvLyBEaXN0cmlidXRpb24gZGF0YVxyXG4gICAgc2VudGltZW50RGlzdHJpYnV0aW9uOiB7fSxcclxuICAgIHRvcGljRGlzdHJpYnV0aW9uOiB7fSxcclxuICAgIGxvY2F0aW9uQnJlYWtkb3duOiB7fSxcclxuICAgIFxyXG4gICAgLy8gU3RhdGUgbWFuYWdlbWVudFxyXG4gICAgaXNMb2FkaW5nOiBmYWxzZSxcclxuICAgIGVycm9yOiBudWxsLFxyXG4gICAgbGFzdFVwZGF0ZWQ6IG51bGwsXHJcbiAgfSxcclxuICByZWR1Y2Vyczoge1xyXG4gICAgY2xlYXJFcnJvcjogKHN0YXRlKSA9PiB7XHJcbiAgICAgIHN0YXRlLmVycm9yID0gbnVsbDtcclxuICAgIH0sXHJcbiAgICByZXNldEFuYWx5dGljczogKHN0YXRlKSA9PiB7XHJcbiAgICAgIHN0YXRlLnRvdGFsUmV2aWV3cyA9IDA7XHJcbiAgICAgIHN0YXRlLmF2ZXJhZ2VSYXRpbmcgPSAwO1xyXG4gICAgICBzdGF0ZS5wb3NpdGl2ZVJhdGUgPSAwO1xyXG4gICAgICBzdGF0ZS5uZWdhdGl2ZUNvdW50ID0gMDtcclxuICAgICAgc3RhdGUuc2VudGltZW50RGlzdHJpYnV0aW9uID0ge307XHJcbiAgICAgIHN0YXRlLnRvcGljRGlzdHJpYnV0aW9uID0ge307XHJcbiAgICAgIHN0YXRlLmxvY2F0aW9uQnJlYWtkb3duID0ge307XHJcbiAgICAgIHN0YXRlLmVycm9yID0gbnVsbDtcclxuICAgICAgc3RhdGUubGFzdFVwZGF0ZWQgPSBudWxsO1xyXG4gICAgfSxcclxuICB9LFxyXG4gIGV4dHJhUmVkdWNlcnM6IChidWlsZGVyKSA9PiB7XHJcbiAgICBidWlsZGVyXHJcbiAgICAgIC5hZGRDYXNlKGZldGNoQW5hbHl0aWNzLnBlbmRpbmcsIChzdGF0ZSkgPT4ge1xyXG4gICAgICAgIHN0YXRlLmlzTG9hZGluZyA9IHRydWU7XHJcbiAgICAgICAgc3RhdGUuZXJyb3IgPSBudWxsO1xyXG4gICAgICB9KVxyXG4gICAgICAuYWRkQ2FzZShmZXRjaEFuYWx5dGljcy5mdWxmaWxsZWQsIChzdGF0ZSwgYWN0aW9uKSA9PiB7XHJcbiAgICAgICAgc3RhdGUuaXNMb2FkaW5nID0gZmFsc2U7XHJcbiAgICAgICAgc3RhdGUudG90YWxSZXZpZXdzID0gYWN0aW9uLnBheWxvYWQudG90YWxfcmV2aWV3cztcclxuICAgICAgICBzdGF0ZS5hdmVyYWdlUmF0aW5nID0gYWN0aW9uLnBheWxvYWQuYXZlcmFnZV9yYXRpbmc7XHJcbiAgICAgICAgc3RhdGUucG9zaXRpdmVSYXRlID0gYWN0aW9uLnBheWxvYWQucG9zaXRpdmVfcmF0ZTtcclxuICAgICAgICBzdGF0ZS5uZWdhdGl2ZUNvdW50ID0gYWN0aW9uLnBheWxvYWQubmVnYXRpdmVfY291bnQ7XHJcbiAgICAgICAgc3RhdGUuc2VudGltZW50RGlzdHJpYnV0aW9uID0gYWN0aW9uLnBheWxvYWQuc2VudGltZW50X2Rpc3RyaWJ1dGlvbjtcclxuICAgICAgICBzdGF0ZS50b3BpY0Rpc3RyaWJ1dGlvbiA9IGFjdGlvbi5wYXlsb2FkLnRvcGljX2Rpc3RyaWJ1dGlvbjtcclxuICAgICAgICBzdGF0ZS5sb2NhdGlvbkJyZWFrZG93biA9IGFjdGlvbi5wYXlsb2FkLmxvY2F0aW9uX2JyZWFrZG93bjtcclxuICAgICAgICBzdGF0ZS5sYXN0VXBkYXRlZCA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKTtcclxuICAgICAgICBzdGF0ZS5lcnJvciA9IG51bGw7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5hZGRDYXNlKGZldGNoQW5hbHl0aWNzLnJlamVjdGVkLCAoc3RhdGUsIGFjdGlvbikgPT4ge1xyXG4gICAgICAgIHN0YXRlLmlzTG9hZGluZyA9IGZhbHNlO1xyXG4gICAgICAgIHN0YXRlLmVycm9yID0gYWN0aW9uLnBheWxvYWQ7XHJcbiAgICAgIH0pO1xyXG4gIH0sXHJcbn0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IHsgY2xlYXJFcnJvciwgcmVzZXRBbmFseXRpY3MgfSA9IGFuYWx5dGljc1NsaWNlLmFjdGlvbnM7XHJcbmV4cG9ydCBkZWZhdWx0IGFuYWx5dGljc1NsaWNlLnJlZHVjZXI7XHJcbiJdLCJuYW1lcyI6WyJjcmVhdGVTbGljZSIsImNyZWF0ZUFzeW5jVGh1bmsiLCJmZXRjaEFuYWx5dGljcyIsIl8iLCJyZWplY3RXaXRoVmFsdWUiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsIm9rIiwiRXJyb3IiLCJzdGF0dXMiLCJyZXN1bHQiLCJqc29uIiwiZXJyb3IiLCJtZXNzYWdlIiwiYW5hbHl0aWNzU2xpY2UiLCJuYW1lIiwiaW5pdGlhbFN0YXRlIiwidG90YWxSZXZpZXdzIiwiYXZlcmFnZVJhdGluZyIsInBvc2l0aXZlUmF0ZSIsIm5lZ2F0aXZlQ291bnQiLCJzZW50aW1lbnREaXN0cmlidXRpb24iLCJ0b3BpY0Rpc3RyaWJ1dGlvbiIsImxvY2F0aW9uQnJlYWtkb3duIiwiaXNMb2FkaW5nIiwibGFzdFVwZGF0ZWQiLCJyZWR1Y2VycyIsImNsZWFyRXJyb3IiLCJzdGF0ZSIsInJlc2V0QW5hbHl0aWNzIiwiZXh0cmFSZWR1Y2VycyIsImJ1aWxkZXIiLCJhZGRDYXNlIiwicGVuZGluZyIsImZ1bGZpbGxlZCIsImFjdGlvbiIsInBheWxvYWQiLCJ0b3RhbF9yZXZpZXdzIiwiYXZlcmFnZV9yYXRpbmciLCJwb3NpdGl2ZV9yYXRlIiwibmVnYXRpdmVfY291bnQiLCJzZW50aW1lbnRfZGlzdHJpYnV0aW9uIiwidG9waWNfZGlzdHJpYnV0aW9uIiwibG9jYXRpb25fYnJlYWtkb3duIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwicmVqZWN0ZWQiLCJhY3Rpb25zIiwicmVkdWNlciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/store/slices/analyticsSlice.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./src/store/slices/ingestSlice.js":
/*!*****************************************!*\
  !*** ./src/store/slices/ingestSlice.js ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearUploadState: () => (/* binding */ clearUploadState),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   resetIngestState: () => (/* binding */ resetIngestState),\n/* harmony export */   setJsonData: () => (/* binding */ setJsonData),\n/* harmony export */   uploadReviews: () => (/* binding */ uploadReviews)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"(pages-dir-browser)/./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n\n// Async thunk for uploading reviews\nconst uploadReviews = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('ingest/uploadReviews', async (reviewsData, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await fetch('http://13.53.214.127:8000/ingest', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-api-key': 'your-api-key'\n            },\n            body: JSON.stringify(reviewsData)\n        });\n        if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        return rejectWithValue(error.message);\n    }\n});\nconst ingestSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: 'ingest',\n    initialState: {\n        isUploading: false,\n        uploadSuccess: false,\n        uploadError: null,\n        uploadedCount: 0,\n        jsonData: ''\n    },\n    reducers: {\n        setJsonData: (state, action)=>{\n            state.jsonData = action.payload;\n        },\n        clearUploadState: (state)=>{\n            state.uploadSuccess = false;\n            state.uploadError = null;\n            state.uploadedCount = 0;\n        },\n        resetIngestState: (state)=>{\n            state.isUploading = false;\n            state.uploadSuccess = false;\n            state.uploadError = null;\n            state.uploadedCount = 0;\n            state.jsonData = '';\n        }\n    },\n    extraReducers: (builder)=>{\n        builder.addCase(uploadReviews.pending, (state)=>{\n            state.isUploading = true;\n            state.uploadSuccess = false;\n            state.uploadError = null;\n        }).addCase(uploadReviews.fulfilled, (state, action)=>{\n            state.isUploading = false;\n            state.uploadSuccess = true;\n            state.uploadedCount = action.payload.count || 0;\n            state.uploadError = null;\n        }).addCase(uploadReviews.rejected, (state, action)=>{\n            state.isUploading = false;\n            state.uploadSuccess = false;\n            state.uploadError = action.payload;\n        });\n    }\n});\nconst { setJsonData, clearUploadState, resetIngestState } = ingestSlice.actions;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ingestSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9zdG9yZS9zbGljZXMvaW5nZXN0U2xpY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWlFO0FBRWpFLG9DQUFvQztBQUM3QixNQUFNRSxnQkFBZ0JELGtFQUFnQkEsQ0FDM0Msd0JBQ0EsT0FBT0U7UUFBYSxFQUFFQyxlQUFlLEVBQUU7SUFDckMsSUFBSTtRQUNGLE1BQU1DLFdBQVcsTUFBTUMsTUFBTSxvQ0FBb0M7WUFDL0RDLFFBQVE7WUFDUkMsU0FBUztnQkFDUCxnQkFBZ0I7Z0JBQ2hCLGFBQWE7WUFDZjtZQUNBQyxNQUFNQyxLQUFLQyxTQUFTLENBQUNSO1FBQ3ZCO1FBRUEsSUFBSSxDQUFDRSxTQUFTTyxFQUFFLEVBQUU7WUFDaEIsTUFBTSxJQUFJQyxNQUFNLHVCQUF1QyxPQUFoQlIsU0FBU1MsTUFBTTtRQUN4RDtRQUVBLE1BQU1DLFNBQVMsTUFBTVYsU0FBU1csSUFBSTtRQUNsQyxPQUFPRDtJQUNULEVBQUUsT0FBT0UsT0FBTztRQUNkLE9BQU9iLGdCQUFnQmEsTUFBTUMsT0FBTztJQUN0QztBQUNGLEdBQ0E7QUFFRixNQUFNQyxjQUFjbkIsNkRBQVdBLENBQUM7SUFDOUJvQixNQUFNO0lBQ05DLGNBQWM7UUFDWkMsYUFBYTtRQUNiQyxlQUFlO1FBQ2ZDLGFBQWE7UUFDYkMsZUFBZTtRQUNmQyxVQUFVO0lBQ1o7SUFDQUMsVUFBVTtRQUNSQyxhQUFhLENBQUNDLE9BQU9DO1lBQ25CRCxNQUFNSCxRQUFRLEdBQUdJLE9BQU9DLE9BQU87UUFDakM7UUFDQUMsa0JBQWtCLENBQUNIO1lBQ2pCQSxNQUFNTixhQUFhLEdBQUc7WUFDdEJNLE1BQU1MLFdBQVcsR0FBRztZQUNwQkssTUFBTUosYUFBYSxHQUFHO1FBQ3hCO1FBQ0FRLGtCQUFrQixDQUFDSjtZQUNqQkEsTUFBTVAsV0FBVyxHQUFHO1lBQ3BCTyxNQUFNTixhQUFhLEdBQUc7WUFDdEJNLE1BQU1MLFdBQVcsR0FBRztZQUNwQkssTUFBTUosYUFBYSxHQUFHO1lBQ3RCSSxNQUFNSCxRQUFRLEdBQUc7UUFDbkI7SUFDRjtJQUNBUSxlQUFlLENBQUNDO1FBQ2RBLFFBQ0dDLE9BQU8sQ0FBQ2xDLGNBQWNtQyxPQUFPLEVBQUUsQ0FBQ1I7WUFDL0JBLE1BQU1QLFdBQVcsR0FBRztZQUNwQk8sTUFBTU4sYUFBYSxHQUFHO1lBQ3RCTSxNQUFNTCxXQUFXLEdBQUc7UUFDdEIsR0FDQ1ksT0FBTyxDQUFDbEMsY0FBY29DLFNBQVMsRUFBRSxDQUFDVCxPQUFPQztZQUN4Q0QsTUFBTVAsV0FBVyxHQUFHO1lBQ3BCTyxNQUFNTixhQUFhLEdBQUc7WUFDdEJNLE1BQU1KLGFBQWEsR0FBR0ssT0FBT0MsT0FBTyxDQUFDUSxLQUFLLElBQUk7WUFDOUNWLE1BQU1MLFdBQVcsR0FBRztRQUN0QixHQUNDWSxPQUFPLENBQUNsQyxjQUFjc0MsUUFBUSxFQUFFLENBQUNYLE9BQU9DO1lBQ3ZDRCxNQUFNUCxXQUFXLEdBQUc7WUFDcEJPLE1BQU1OLGFBQWEsR0FBRztZQUN0Qk0sTUFBTUwsV0FBVyxHQUFHTSxPQUFPQyxPQUFPO1FBQ3BDO0lBQ0o7QUFDRjtBQUVPLE1BQU0sRUFBRUgsV0FBVyxFQUFFSSxnQkFBZ0IsRUFBRUMsZ0JBQWdCLEVBQUUsR0FBR2QsWUFBWXNCLE9BQU8sQ0FBQztBQUN2RixpRUFBZXRCLFlBQVl1QixPQUFPLEVBQUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcc2luc2FcXERvd25sb2Fkc1xccmV2aWV3Y29waWxvdGZyb250ZW5kXFxzcmNcXHN0b3JlXFxzbGljZXNcXGluZ2VzdFNsaWNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNsaWNlLCBjcmVhdGVBc3luY1RodW5rIH0gZnJvbSAnQHJlZHV4anMvdG9vbGtpdCc7XHJcblxyXG4vLyBBc3luYyB0aHVuayBmb3IgdXBsb2FkaW5nIHJldmlld3NcclxuZXhwb3J0IGNvbnN0IHVwbG9hZFJldmlld3MgPSBjcmVhdGVBc3luY1RodW5rKFxyXG4gICdpbmdlc3QvdXBsb2FkUmV2aWV3cycsXHJcbiAgYXN5bmMgKHJldmlld3NEYXRhLCB7IHJlamVjdFdpdGhWYWx1ZSB9KSA9PiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwOi8vMTMuNTMuMjE0LjEyNzo4MDAwL2luZ2VzdCcsIHtcclxuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICAgICAgJ3gtYXBpLWtleSc6ICd5b3VyLWFwaS1rZXknLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkocmV2aWV3c0RhdGEpLFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEhUVFAgZXJyb3IhIHN0YXR1czogJHtyZXNwb25zZS5zdGF0dXN9YCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHJldHVybiByZWplY3RXaXRoVmFsdWUoZXJyb3IubWVzc2FnZSk7XHJcbiAgICB9XHJcbiAgfVxyXG4pO1xyXG5cclxuY29uc3QgaW5nZXN0U2xpY2UgPSBjcmVhdGVTbGljZSh7XHJcbiAgbmFtZTogJ2luZ2VzdCcsXHJcbiAgaW5pdGlhbFN0YXRlOiB7XHJcbiAgICBpc1VwbG9hZGluZzogZmFsc2UsXHJcbiAgICB1cGxvYWRTdWNjZXNzOiBmYWxzZSxcclxuICAgIHVwbG9hZEVycm9yOiBudWxsLFxyXG4gICAgdXBsb2FkZWRDb3VudDogMCxcclxuICAgIGpzb25EYXRhOiAnJyxcclxuICB9LFxyXG4gIHJlZHVjZXJzOiB7XHJcbiAgICBzZXRKc29uRGF0YTogKHN0YXRlLCBhY3Rpb24pID0+IHtcclxuICAgICAgc3RhdGUuanNvbkRhdGEgPSBhY3Rpb24ucGF5bG9hZDtcclxuICAgIH0sXHJcbiAgICBjbGVhclVwbG9hZFN0YXRlOiAoc3RhdGUpID0+IHtcclxuICAgICAgc3RhdGUudXBsb2FkU3VjY2VzcyA9IGZhbHNlO1xyXG4gICAgICBzdGF0ZS51cGxvYWRFcnJvciA9IG51bGw7XHJcbiAgICAgIHN0YXRlLnVwbG9hZGVkQ291bnQgPSAwO1xyXG4gICAgfSxcclxuICAgIHJlc2V0SW5nZXN0U3RhdGU6IChzdGF0ZSkgPT4ge1xyXG4gICAgICBzdGF0ZS5pc1VwbG9hZGluZyA9IGZhbHNlO1xyXG4gICAgICBzdGF0ZS51cGxvYWRTdWNjZXNzID0gZmFsc2U7XHJcbiAgICAgIHN0YXRlLnVwbG9hZEVycm9yID0gbnVsbDtcclxuICAgICAgc3RhdGUudXBsb2FkZWRDb3VudCA9IDA7XHJcbiAgICAgIHN0YXRlLmpzb25EYXRhID0gJyc7XHJcbiAgICB9LFxyXG4gIH0sXHJcbiAgZXh0cmFSZWR1Y2VyczogKGJ1aWxkZXIpID0+IHtcclxuICAgIGJ1aWxkZXJcclxuICAgICAgLmFkZENhc2UodXBsb2FkUmV2aWV3cy5wZW5kaW5nLCAoc3RhdGUpID0+IHtcclxuICAgICAgICBzdGF0ZS5pc1VwbG9hZGluZyA9IHRydWU7XHJcbiAgICAgICAgc3RhdGUudXBsb2FkU3VjY2VzcyA9IGZhbHNlO1xyXG4gICAgICAgIHN0YXRlLnVwbG9hZEVycm9yID0gbnVsbDtcclxuICAgICAgfSlcclxuICAgICAgLmFkZENhc2UodXBsb2FkUmV2aWV3cy5mdWxmaWxsZWQsIChzdGF0ZSwgYWN0aW9uKSA9PiB7XHJcbiAgICAgICAgc3RhdGUuaXNVcGxvYWRpbmcgPSBmYWxzZTtcclxuICAgICAgICBzdGF0ZS51cGxvYWRTdWNjZXNzID0gdHJ1ZTtcclxuICAgICAgICBzdGF0ZS51cGxvYWRlZENvdW50ID0gYWN0aW9uLnBheWxvYWQuY291bnQgfHwgMDtcclxuICAgICAgICBzdGF0ZS51cGxvYWRFcnJvciA9IG51bGw7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5hZGRDYXNlKHVwbG9hZFJldmlld3MucmVqZWN0ZWQsIChzdGF0ZSwgYWN0aW9uKSA9PiB7XHJcbiAgICAgICAgc3RhdGUuaXNVcGxvYWRpbmcgPSBmYWxzZTtcclxuICAgICAgICBzdGF0ZS51cGxvYWRTdWNjZXNzID0gZmFsc2U7XHJcbiAgICAgICAgc3RhdGUudXBsb2FkRXJyb3IgPSBhY3Rpb24ucGF5bG9hZDtcclxuICAgICAgfSk7XHJcbiAgfSxcclxufSk7XHJcblxyXG5leHBvcnQgY29uc3QgeyBzZXRKc29uRGF0YSwgY2xlYXJVcGxvYWRTdGF0ZSwgcmVzZXRJbmdlc3RTdGF0ZSB9ID0gaW5nZXN0U2xpY2UuYWN0aW9ucztcclxuZXhwb3J0IGRlZmF1bHQgaW5nZXN0U2xpY2UucmVkdWNlcjtcclxuIl0sIm5hbWVzIjpbImNyZWF0ZVNsaWNlIiwiY3JlYXRlQXN5bmNUaHVuayIsInVwbG9hZFJldmlld3MiLCJyZXZpZXdzRGF0YSIsInJlamVjdFdpdGhWYWx1ZSIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJvayIsIkVycm9yIiwic3RhdHVzIiwicmVzdWx0IiwianNvbiIsImVycm9yIiwibWVzc2FnZSIsImluZ2VzdFNsaWNlIiwibmFtZSIsImluaXRpYWxTdGF0ZSIsImlzVXBsb2FkaW5nIiwidXBsb2FkU3VjY2VzcyIsInVwbG9hZEVycm9yIiwidXBsb2FkZWRDb3VudCIsImpzb25EYXRhIiwicmVkdWNlcnMiLCJzZXRKc29uRGF0YSIsInN0YXRlIiwiYWN0aW9uIiwicGF5bG9hZCIsImNsZWFyVXBsb2FkU3RhdGUiLCJyZXNldEluZ2VzdFN0YXRlIiwiZXh0cmFSZWR1Y2VycyIsImJ1aWxkZXIiLCJhZGRDYXNlIiwicGVuZGluZyIsImZ1bGZpbGxlZCIsImNvdW50IiwicmVqZWN0ZWQiLCJhY3Rpb25zIiwicmVkdWNlciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/store/slices/ingestSlice.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./src/store/slices/reviewsSlice.js":
/*!******************************************!*\
  !*** ./src/store/slices/reviewsSlice.js ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearError: () => (/* binding */ clearError),\n/* harmony export */   clearFilters: () => (/* binding */ clearFilters),\n/* harmony export */   clearReplyData: () => (/* binding */ clearReplyData),\n/* harmony export */   clearSelectedReview: () => (/* binding */ clearSelectedReview),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fetchReviewById: () => (/* binding */ fetchReviewById),\n/* harmony export */   fetchReviews: () => (/* binding */ fetchReviews),\n/* harmony export */   setCurrentPage: () => (/* binding */ setCurrentPage),\n/* harmony export */   setLocationFilter: () => (/* binding */ setLocationFilter),\n/* harmony export */   setPageSize: () => (/* binding */ setPageSize),\n/* harmony export */   setSearchQuery: () => (/* binding */ setSearchQuery),\n/* harmony export */   setSentimentFilter: () => (/* binding */ setSentimentFilter),\n/* harmony export */   suggestReply: () => (/* binding */ suggestReply)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"(pages-dir-browser)/./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n\n// Async thunk for fetching reviews with filters and pagination\nconst fetchReviews = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('reviews/fetchReviews', async (param, param1)=>{\n    let { location, sentiment, q, page = 1, pagesize = 20 } = param, { rejectWithValue } = param1;\n    try {\n        const params = new URLSearchParams({\n            page: page.toString(),\n            pagesize: pagesize.toString()\n        });\n        if (location) params.append('location', location);\n        if (sentiment) params.append('sentiment', sentiment);\n        if (q) params.append('q', q);\n        const response = await fetch(\"http://13.53.214.127:8000/reviews?\".concat(params), {\n            method: 'GET',\n            headers: {\n                'x-api-key': 'your-api-key'\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        return rejectWithValue(error.message);\n    }\n});\n// Async thunk for fetching a single review by ID\nconst fetchReviewById = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('reviews/fetchReviewById', async (id, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await fetch(\"http://13.53.214.127:8000/reviews/\".concat(id), {\n            method: 'GET',\n            headers: {\n                'x-api-key': 'your-api-key'\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        return rejectWithValue(error.message);\n    }\n});\n// Async thunk for suggesting reply to a review\nconst suggestReply = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('reviews/suggestReply', async (id, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await fetch(\"http://13.53.214.127:8000/reviews/\".concat(id, \"/suggest-reply\"), {\n            method: 'POST',\n            headers: {\n                'x-api-key': 'your-api-key'\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        const result = await response.json();\n        return {\n            id,\n            ...result\n        };\n    } catch (error) {\n        return rejectWithValue(error.message);\n    }\n});\nconst reviewsSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: 'reviews',\n    initialState: {\n        // Reviews list state\n        reviews: [],\n        totalReviews: 0,\n        currentPage: 1,\n        pageSize: 20,\n        isLoading: false,\n        error: null,\n        // Filters state\n        filters: {\n            location: '',\n            sentiment: '',\n            searchQuery: ''\n        },\n        // Single review state\n        selectedReview: null,\n        isLoadingReview: false,\n        reviewError: null,\n        // Reply suggestion state\n        replyData: null,\n        isGeneratingReply: false,\n        replyError: null\n    },\n    reducers: {\n        // Filter actions\n        setLocationFilter: (state, action)=>{\n            state.filters.location = action.payload;\n        },\n        setSentimentFilter: (state, action)=>{\n            state.filters.sentiment = action.payload;\n        },\n        setSearchQuery: (state, action)=>{\n            state.filters.searchQuery = action.payload;\n        },\n        clearFilters: (state)=>{\n            state.filters = {\n                location: '',\n                sentiment: '',\n                searchQuery: ''\n            };\n        },\n        // Pagination actions\n        setCurrentPage: (state, action)=>{\n            state.currentPage = action.payload;\n        },\n        setPageSize: (state, action)=>{\n            state.pageSize = action.payload;\n        },\n        // Clear states\n        clearSelectedReview: (state)=>{\n            state.selectedReview = null;\n            state.reviewError = null;\n        },\n        clearReplyData: (state)=>{\n            state.replyData = null;\n            state.replyError = null;\n        },\n        clearError: (state)=>{\n            state.error = null;\n            state.reviewError = null;\n            state.replyError = null;\n        }\n    },\n    extraReducers: (builder)=>{\n        builder// Fetch reviews cases\n        .addCase(fetchReviews.pending, (state)=>{\n            state.isLoading = true;\n            state.error = null;\n        }).addCase(fetchReviews.fulfilled, (state, action)=>{\n            state.isLoading = false;\n            state.reviews = action.payload.reviews || action.payload;\n            state.totalReviews = action.payload.total || action.payload.length;\n            state.error = null;\n        }).addCase(fetchReviews.rejected, (state, action)=>{\n            state.isLoading = false;\n            state.error = action.payload;\n        })// Fetch single review cases\n        .addCase(fetchReviewById.pending, (state)=>{\n            state.isLoadingReview = true;\n            state.reviewError = null;\n        }).addCase(fetchReviewById.fulfilled, (state, action)=>{\n            state.isLoadingReview = false;\n            state.selectedReview = action.payload;\n            state.reviewError = null;\n        }).addCase(fetchReviewById.rejected, (state, action)=>{\n            state.isLoadingReview = false;\n            state.reviewError = action.payload;\n        })// Suggest reply cases\n        .addCase(suggestReply.pending, (state)=>{\n            state.isGeneratingReply = true;\n            state.replyError = null;\n        }).addCase(suggestReply.fulfilled, (state, action)=>{\n            state.isGeneratingReply = false;\n            state.replyData = action.payload;\n            state.replyError = null;\n        }).addCase(suggestReply.rejected, (state, action)=>{\n            state.isGeneratingReply = false;\n            state.replyError = action.payload;\n        });\n    }\n});\nconst { setLocationFilter, setSentimentFilter, setSearchQuery, clearFilters, setCurrentPage, setPageSize, clearSelectedReview, clearReplyData, clearError } = reviewsSlice.actions;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (reviewsSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/store/slices/reviewsSlice.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./src/store/slices/searchSlice.js":
/*!*****************************************!*\
  !*** ./src/store/slices/searchSlice.js ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearError: () => (/* binding */ clearError),\n/* harmony export */   clearResults: () => (/* binding */ clearResults),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   resetSearch: () => (/* binding */ resetSearch),\n/* harmony export */   searchSimilarReviews: () => (/* binding */ searchSimilarReviews),\n/* harmony export */   setQuery: () => (/* binding */ setQuery),\n/* harmony export */   setTopK: () => (/* binding */ setTopK)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"(pages-dir-browser)/./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n\n// Async thunk for searching similar reviews\nconst searchSimilarReviews = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('search/searchSimilarReviews', async (param, param1)=>{\n    let { query, k = 5 } = param, { rejectWithValue } = param1;\n    try {\n        const params = new URLSearchParams({\n            q: query,\n            k: k.toString()\n        });\n        const response = await fetch(\"http://13.53.214.127:8000/search?\".concat(params), {\n            method: 'GET',\n            headers: {\n                'x-api-key': 'your-api-key'\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        const result = await response.json();\n        return {\n            query,\n            results: result\n        };\n    } catch (error) {\n        return rejectWithValue(error.message);\n    }\n});\nconst searchSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: 'search',\n    initialState: {\n        // Search state\n        query: '',\n        results: [],\n        isSearching: false,\n        searchError: null,\n        hasSearched: false,\n        // Search parameters\n        topK: 5,\n        // UI state\n        lastSearchQuery: '',\n        searchStartTime: null,\n        searchDuration: null\n    },\n    reducers: {\n        setQuery: (state, action)=>{\n            state.query = action.payload;\n        },\n        setTopK: (state, action)=>{\n            state.topK = action.payload;\n        },\n        clearResults: (state)=>{\n            state.results = [];\n            state.hasSearched = false;\n            state.lastSearchQuery = '';\n            state.searchError = null;\n            state.searchDuration = null;\n        },\n        clearError: (state)=>{\n            state.searchError = null;\n        },\n        resetSearch: (state)=>{\n            state.query = '';\n            state.results = [];\n            state.isSearching = false;\n            state.searchError = null;\n            state.hasSearched = false;\n            state.lastSearchQuery = '';\n            state.searchStartTime = null;\n            state.searchDuration = null;\n        }\n    },\n    extraReducers: (builder)=>{\n        builder.addCase(searchSimilarReviews.pending, (state, action)=>{\n            state.isSearching = true;\n            state.searchError = null;\n            state.searchStartTime = Date.now();\n            state.lastSearchQuery = action.meta.arg.query;\n        }).addCase(searchSimilarReviews.fulfilled, (state, action)=>{\n            state.isSearching = false;\n            state.results = action.payload.results;\n            state.hasSearched = true;\n            state.searchError = null;\n            state.searchDuration = Date.now() - state.searchStartTime;\n        }).addCase(searchSimilarReviews.rejected, (state, action)=>{\n            state.isSearching = false;\n            state.searchError = action.payload;\n            state.results = [];\n            state.hasSearched = true;\n            state.searchDuration = Date.now() - state.searchStartTime;\n        });\n    }\n});\nconst { setQuery, setTopK, clearResults, clearError, resetSearch } = searchSlice.actions;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (searchSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/store/slices/searchSlice.js\n"));

/***/ })

});