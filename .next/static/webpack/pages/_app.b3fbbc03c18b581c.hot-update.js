"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "(pages-dir-browser)/./src/store/slices/reviewsSlice.js":
/*!******************************************!*\
  !*** ./src/store/slices/reviewsSlice.js ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearError: () => (/* binding */ clearError),\n/* harmony export */   clearFilters: () => (/* binding */ clearFilters),\n/* harmony export */   clearReplyData: () => (/* binding */ clearReplyData),\n/* harmony export */   clearSelectedReview: () => (/* binding */ clearSelectedReview),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fetchReviewById: () => (/* binding */ fetchReviewById),\n/* harmony export */   fetchReviews: () => (/* binding */ fetchReviews),\n/* harmony export */   setCurrentPage: () => (/* binding */ setCurrentPage),\n/* harmony export */   setLocationFilter: () => (/* binding */ setLocationFilter),\n/* harmony export */   setPageSize: () => (/* binding */ setPageSize),\n/* harmony export */   setSearchQuery: () => (/* binding */ setSearchQuery),\n/* harmony export */   setSentimentFilter: () => (/* binding */ setSentimentFilter),\n/* harmony export */   suggestReply: () => (/* binding */ suggestReply)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"(pages-dir-browser)/./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n\n// Async thunk for fetching reviews with filters and pagination\nconst fetchReviews = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('reviews/fetchReviews', async (param, param1)=>{\n    let { location, sentiment, q, page = 1, pagesize = 20 } = param, { rejectWithValue } = param1;\n    try {\n        const params = new URLSearchParams({\n            page: page.toString(),\n            pagesize: pagesize.toString()\n        });\n        if (location) params.append('location', location);\n        if (sentiment) params.append('sentiment', sentiment);\n        if (q) params.append('q', q);\n        const response = await fetch(\"http://13.53.214.127:8000/reviews?\".concat(params), {\n            method: 'GET',\n            headers: {\n                'x-api-key': 'your-api-key'\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        return rejectWithValue(error.message);\n    }\n});\n// Async thunk for fetching a single review by ID\nconst fetchReviewById = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('reviews/fetchReviewById', async (id, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await fetch(\"http://13.53.214.127:8000/reviews/\".concat(id), {\n            method: 'GET',\n            headers: {\n                'x-api-key': 'your-api-key'\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        return rejectWithValue(error.message);\n    }\n});\n// Async thunk for suggesting reply to a review\nconst suggestReply = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('reviews/suggestReply', async (id, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await fetch(\"http://13.53.214.127:8000/reviews/\".concat(id, \"/suggest-reply\"), {\n            method: 'POST',\n            headers: {\n                'x-api-key': 'your-api-key'\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        const result = await response.json();\n        return {\n            id,\n            ...result\n        };\n    } catch (error) {\n        return rejectWithValue(error.message);\n    }\n});\nconst reviewsSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: 'reviews',\n    initialState: {\n        // Reviews list state\n        reviews: [],\n        totalReviews: 0,\n        currentPage: 1,\n        pageSize: 20,\n        isLoading: false,\n        error: null,\n        // Filters state\n        filters: {\n            location: '',\n            sentiment: '',\n            searchQuery: ''\n        },\n        // Single review state\n        selectedReview: null,\n        isLoadingReview: false,\n        reviewError: null,\n        // Reply suggestion state\n        replyData: null,\n        isGeneratingReply: false,\n        replyError: null\n    },\n    reducers: {\n        // Filter actions\n        setLocationFilter: (state, action)=>{\n            state.filters.location = action.payload;\n        },\n        setSentimentFilter: (state, action)=>{\n            state.filters.sentiment = action.payload;\n        },\n        setSearchQuery: (state, action)=>{\n            state.filters.searchQuery = action.payload;\n        },\n        clearFilters: (state)=>{\n            state.filters = {\n                location: '',\n                sentiment: '',\n                searchQuery: ''\n            };\n        },\n        // Pagination actions\n        setCurrentPage: (state, action)=>{\n            state.currentPage = action.payload;\n        },\n        setPageSize: (state, action)=>{\n            state.pageSize = action.payload;\n        },\n        // Clear states\n        clearSelectedReview: (state)=>{\n            state.selectedReview = null;\n            state.reviewError = null;\n        },\n        clearReplyData: (state)=>{\n            state.replyData = null;\n            state.replyError = null;\n        },\n        clearError: (state)=>{\n            state.error = null;\n            state.reviewError = null;\n            state.replyError = null;\n        }\n    },\n    extraReducers: (builder)=>{\n        builder// Fetch reviews cases\n        .addCase(fetchReviews.pending, (state)=>{\n            state.isLoading = true;\n            state.error = null;\n        }).addCase(fetchReviews.fulfilled, (state, action)=>{\n            state.isLoading = false;\n            state.reviews = action.payload.reviews || action.payload;\n            state.totalReviews = action.payload.total || action.payload.length;\n            state.error = null;\n        }).addCase(fetchReviews.rejected, (state, action)=>{\n            state.isLoading = false;\n            state.error = action.payload;\n        })// Fetch single review cases\n        .addCase(fetchReviewById.pending, (state)=>{\n            state.isLoadingReview = true;\n            state.reviewError = null;\n        }).addCase(fetchReviewById.fulfilled, (state, action)=>{\n            state.isLoadingReview = false;\n            state.selectedReview = action.payload;\n            state.reviewError = null;\n        }).addCase(fetchReviewById.rejected, (state, action)=>{\n            state.isLoadingReview = false;\n            state.reviewError = action.payload;\n        })// Suggest reply cases\n        .addCase(suggestReply.pending, (state)=>{\n            state.isGeneratingReply = true;\n            state.replyError = null;\n        }).addCase(suggestReply.fulfilled, (state, action)=>{\n            state.isGeneratingReply = false;\n            state.replyData = action.payload;\n            state.replyError = null;\n        }).addCase(suggestReply.rejected, (state, action)=>{\n            state.isGeneratingReply = false;\n            state.replyError = action.payload;\n        });\n    }\n});\nconst { setLocationFilter, setSentimentFilter, setSearchQuery, clearFilters, setCurrentPage, setPageSize, clearSelectedReview, clearReplyData, clearError } = reviewsSlice.actions;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (reviewsSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/store/slices/reviewsSlice.js\n"));

/***/ })

});